{"version":3,"file":"iamport-ionic4-kcp.js.map","sources":["ng://iamport-ionic4-kcp/lib/iamport.payment.ts","ng://iamport-ionic4-kcp/lib/iamport.certification.ts","ng://iamport-ionic4-kcp/lib/iamport-ionic4-kcp.service.ts","ng://iamport-ionic4-kcp/lib/iamport-ionic4-kcp.module.ts"],"sourcesContent":["export class IamportPayment {\n\n    private success: boolean;\n    private status: string;\n    private response : object;\n\n    constructor(response : any) {\n        this.success = response.success;\n        this.status = response.status;\n        this.response = response;\n    }\n\n    public isSuccess() {\n        return this.success;\n    }\n\n    public getStatus() {\n        return this.status;\n    }\n\n    public getResponse() {\n        return this.response;\n    }\n\n}","export class IamportCertification {\n\n    private success: boolean;\n    private impUid: string;\n    private merchantUid: string;\n\n    constructor(response : any) {\n        this.success = response.success;\n        this.impUid = response.imp_uid;\n        this.merchantUid = response.merchant_uid;\n    }\n\n    public isSuccess() {\n        return this.success;\n    }\n\n    public getImpUid() {\n        return this.impUid;\n    }\n\n    public getMerchantUid() {\n        return this.merchantUid;\n    }\n\n}","import {Injectable} from '@angular/core';\nimport {IamportPayment} from \"./iamport.payment\";\nimport {IamportCertification} from \"./iamport.certification\";\nimport {Platform} from \"@ionic/angular\";\nimport {File} from \"@ionic-native/file/ngx\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser/ngx\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IamportService {\n\n  constructor(private platform: Platform, private inAppBrowser: InAppBrowser, private file: File) {\n\n  }\n\n  private static parseQuery(query: string) {\n    let obj = {},\n        arr = query.split('&');\n\n    for (let element of arr) {\n      const pair = element.split(\"=\");\n      const key = decodeURIComponent(pair[0]);\n      const val = decodeURIComponent(pair[1]);\n\n      if (key === \"imp_success\") {\n        obj[\"success\"] = (\"true\" === val); //string ì boolean ì¼ë¡\n      } else {\n        obj[key] = val;\n      }\n    }\n\n    return obj;\n  }\n\n  public payment(userCode: string, param): Promise<IamportPayment> {\n    const promise = new Promise<IamportPayment>((resolve, reject) => {\n      this.platform.ready().then(() => {\n        let paymentUrl = '/_iamport_file_/www/iamport-checkout.html?user-code=' + userCode;\n        if (this.platform.is('ios')) {\n          paymentUrl = this.file.applicationDirectory + 'www/iamport-checkout-ios.html?user-code=' + userCode;\n        }\n\n        const redirectUrl = \"http://localhost/iamport\";\n        const browser = this.inAppBrowser.create(paymentUrl, '_blank', 'location=no');\n        let paymentProgress = false;\n\n        param.m_redirect_url = redirectUrl;\n\n        browser.on(\"loadstart\")\n            .subscribe(\n                (e) => {\n                  if (e.url.startsWith(redirectUrl)) {\n                    const query = e.url.substring(redirectUrl.length + 1);\n                    const data = IamportService.parseQuery(query);\n\n                    resolve(new IamportPayment(data));\n                    browser.close();\n                  }\n                }\n            );\n\n        browser.on(\"loadstop\")\n            .subscribe(\n                (e) => {\n                  if (!paymentProgress && (e.url).indexOf(paymentUrl) > -1) {\n                    paymentProgress = true;\n\n                    const inlineCallback = `(rsp) => {\n                                                        if( rsp.success ) {\n                                                            location.href = '${redirectUrl}?imp_success=true&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid+'&vbank_num='+rsp.vbank_num+'&vbank_name='+rsp.vbank_name;\n                                                        } else {\n                                                            location.href = '${redirectUrl}?imp_success=false&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid+'&error_msg='+rsp.error_msg;\n                                                        }\n                                                   }`;\n                    const iamport_script = `IMP.request_pay(${JSON.stringify(param)}, ${inlineCallback})`;\n\n                    browser.executeScript({\n                      code: iamport_script\n                    });\n                  }\n                }, (e) => {\n\n                }\n            );\n\n        browser.on(\"exit\")\n            .subscribe(\n                (e) => {\n                  reject(\"ì¬ì©ìê° ê²°ì ë¥¼ ì·¨ìíììµëë¤.\");\n                }\n            );\n\n        browser.show();\n      });\n    });\n\n    return promise;\n  }\n\n  public certification(userCode: string, param): Promise<IamportCertification> {\n    const promise = new Promise<IamportCertification>((resolve, reject) => {\n      this.platform.ready().then(() => {\n        let certificationUrl = '/_iamport_file_/www/iamport-checkout.html?user-code=' + userCode;\n        if (this.platform.is('ios')) {\n          certificationUrl = this.file.applicationDirectory + 'www/iamport-checkout-ios.html?user-code=' + userCode;\n        }\n\n        const redirectUrl = \"http://localhost/iamport-certification\";\n        const browser = this.inAppBrowser.create(certificationUrl, '_blank', 'location=no');\n\n        let certificationProgress = false;\n\n        browser.on(\"loadstart\")\n            .subscribe(\n                (e) => {\n                  if (e.url.startsWith(redirectUrl)) {\n                    const query = e.url.substring(redirectUrl.length + 1);\n                    const data = IamportService.parseQuery(query);\n\n                    resolve(new IamportCertification(data));\n                    browser.close();\n                  }\n                }\n            );\n\n        browser.on(\"loadstop\")\n            .subscribe(\n                (e) => {\n                  if (!certificationProgress && (e.url).indexOf(certificationUrl) > -1) {\n                    certificationProgress = true;\n\n                    const inlineCallback = `(rsp) => {\n                                                        if( rsp.success ) {\n                                                            location.href = '${redirectUrl}?imp_success=true&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid;\n                                                        } else {\n                                                            location.href = '${redirectUrl}?imp_success=false&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid;\n                                                        }\n                                                   }`;\n                    const iamport_script = `IMP.certification(${JSON.stringify(param)}, ${inlineCallback})`;\n\n                    browser.executeScript({\n                      code: iamport_script\n                    });\n                  }\n                }, (e) => {\n\n                }\n            );\n\n        browser.on(\"exit\")\n            .subscribe(\n                (e) => {\n                  reject(\"ì¬ì©ìê° ë³¸ì¸ì¸ì¦ì ì·¨ìíììµëë¤.\");\n                }\n            );\n\n        browser.show();\n      });\n    });\n\n    return promise;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { InAppBrowser } from \"@ionic-native/in-app-browser/ngx\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  providers: [\n      InAppBrowser\n  ],\n  exports: []\n})\nexport class IamportIonic4KcpModule { }\n"],"names":[],"mappings":"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"}
