(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ionic/angular'), require('@ionic-native/file/ngx'), require('@ionic-native/in-app-browser/ngx/index'), require('@ionic-native/file/ngx/index'), require('@angular/core'), require('@ionic-native/in-app-browser/ngx')) :
    typeof define === 'function' && define.amd ? define('iamport-ionic4-kcp', ['exports', '@ionic/angular', '@ionic-native/file/ngx', '@ionic-native/in-app-browser/ngx/index', '@ionic-native/file/ngx/index', '@angular/core', '@ionic-native/in-app-browser/ngx'], factory) :
    (factory((global['iamport-ionic4-kcp'] = {}),global.i1,global.ngx,global.i2,global.i3,global.ng.core,global.ngx$1));
}(this, (function (exports,i1,ngx,i2,i3,i0,ngx$1) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m)
            return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length)
                    o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/iamport.payment.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IamportPayment = /** @class */ (function () {
        function IamportPayment(response) {
            this.success = response.success;
            this.status = response.status;
            this.response = response;
        }
        /**
         * @return {?}
         */
        IamportPayment.prototype.isSuccess = /**
         * @return {?}
         */
            function () {
                return this.success;
            };
        /**
         * @return {?}
         */
        IamportPayment.prototype.getStatus = /**
         * @return {?}
         */
            function () {
                return this.status;
            };
        /**
         * @return {?}
         */
        IamportPayment.prototype.getResponse = /**
         * @return {?}
         */
            function () {
                return this.response;
            };
        return IamportPayment;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/iamport.certification.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IamportCertification = /** @class */ (function () {
        function IamportCertification(response) {
            this.success = response.success;
            this.impUid = response.imp_uid;
            this.merchantUid = response.merchant_uid;
        }
        /**
         * @return {?}
         */
        IamportCertification.prototype.isSuccess = /**
         * @return {?}
         */
            function () {
                return this.success;
            };
        /**
         * @return {?}
         */
        IamportCertification.prototype.getImpUid = /**
         * @return {?}
         */
            function () {
                return this.impUid;
            };
        /**
         * @return {?}
         */
        IamportCertification.prototype.getMerchantUid = /**
         * @return {?}
         */
            function () {
                return this.merchantUid;
            };
        return IamportCertification;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/iamport-ionic4-kcp.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IamportService = /** @class */ (function () {
        function IamportService(platform, inAppBrowser, file) {
            this.platform = platform;
            this.inAppBrowser = inAppBrowser;
            this.file = file;
        }
        /**
         * @private
         * @param {?} query
         * @return {?}
         */
        IamportService.parseQuery = /**
         * @private
         * @param {?} query
         * @return {?}
         */
            function (query) {
                var e_1, _a;
                /** @type {?} */
                var obj = {};
                /** @type {?} */
                var arr = query.split('&');
                try {
                    for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {
                        var element = arr_1_1.value;
                        /** @type {?} */
                        var pair = element.split("=");
                        /** @type {?} */
                        var key = decodeURIComponent(pair[0]);
                        /** @type {?} */
                        var val = decodeURIComponent(pair[1]);
                        if (key === "imp_success") {
                            obj["success"] = ("true" === val); //string 을 boolean 으로
                        }
                        else {
                            obj[key] = val;
                        }
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return))
                            _a.call(arr_1);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                return obj;
            };
        /**
         * @param {?} userCode
         * @param {?} param
         * @return {?}
         */
        IamportService.prototype.payment = /**
         * @param {?} userCode
         * @param {?} param
         * @return {?}
         */
            function (userCode, param) {
                var _this = this;
                /** @type {?} */
                var promise = new Promise(( /**
                 * @param {?} resolve
                 * @param {?} reject
                 * @return {?}
                 */function (resolve, reject) {
                    _this.platform.ready().then(( /**
                     * @return {?}
                     */function () {
                        /** @type {?} */
                        var paymentUrl = '/_iamport_file_/www/iamport-checkout.html?user-code=' + userCode;
                        if (_this.platform.is('ios')) {
                            paymentUrl = _this.file.applicationDirectory + 'www/iamport-checkout-ios.html?user-code=' + userCode;
                        }
                        /** @type {?} */
                        var redirectUrl = "http://localhost/iamport";
                        /** @type {?} */
                        var browser = _this.inAppBrowser.create(paymentUrl, '_blank', 'location=no');
                        /** @type {?} */
                        var paymentProgress = false;
                        param.m_redirect_url = redirectUrl;
                        browser.on("loadstart")
                            .subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                            if (e.url.startsWith(redirectUrl)) {
                                /** @type {?} */
                                var query = e.url.substring(redirectUrl.length + 1);
                                /** @type {?} */
                                var data = IamportService.parseQuery(query);
                                resolve(new IamportPayment(data));
                                browser.close();
                            }
                        }));
                        browser.on("loadstop")
                            .subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                            if (!paymentProgress && (e.url).indexOf(paymentUrl) > -1) {
                                paymentProgress = true;
                                /** @type {?} */
                                var inlineCallback = "(rsp) => {\n                                                        if( rsp.success ) {\n                                                            location.href = '" + redirectUrl + "?imp_success=true&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid+'&vbank_num='+rsp.vbank_num+'&vbank_name='+rsp.vbank_name;\n                                                        } else {\n                                                            location.href = '" + redirectUrl + "?imp_success=false&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid+'&error_msg='+rsp.error_msg;\n                                                        }\n                                                   }";
                                /** @type {?} */
                                var iamport_script = "IMP.request_pay(" + JSON.stringify(param) + ", " + inlineCallback + ")";
                                browser.executeScript({
                                    code: iamport_script
                                });
                            }
                        }), ( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                        }));
                        browser.on("exit")
                            .subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                            reject("사용자가 결제를 취소하였습니다.");
                        }));
                        browser.show();
                    }));
                }));
                return promise;
            };
        /**
         * @param {?} userCode
         * @param {?} param
         * @return {?}
         */
        IamportService.prototype.certification = /**
         * @param {?} userCode
         * @param {?} param
         * @return {?}
         */
            function (userCode, param) {
                var _this = this;
                /** @type {?} */
                var promise = new Promise(( /**
                 * @param {?} resolve
                 * @param {?} reject
                 * @return {?}
                 */function (resolve, reject) {
                    _this.platform.ready().then(( /**
                     * @return {?}
                     */function () {
                        /** @type {?} */
                        var certificationUrl = '/_iamport_file_/www/iamport-checkout.html?user-code=' + userCode;
                        if (_this.platform.is('ios')) {
                            certificationUrl = _this.file.applicationDirectory + 'www/iamport-checkout-ios.html?user-code=' + userCode;
                        }
                        /** @type {?} */
                        var redirectUrl = "http://localhost/iamport-certification";
                        /** @type {?} */
                        var browser = _this.inAppBrowser.create(certificationUrl, '_blank', 'location=no');
                        /** @type {?} */
                        var certificationProgress = false;
                        browser.on("loadstart")
                            .subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                            if (e.url.startsWith(redirectUrl)) {
                                /** @type {?} */
                                var query = e.url.substring(redirectUrl.length + 1);
                                /** @type {?} */
                                var data = IamportService.parseQuery(query);
                                resolve(new IamportCertification(data));
                                browser.close();
                            }
                        }));
                        browser.on("loadstop")
                            .subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                            if (!certificationProgress && (e.url).indexOf(certificationUrl) > -1) {
                                certificationProgress = true;
                                /** @type {?} */
                                var inlineCallback = "(rsp) => {\n                                                        if( rsp.success ) {\n                                                            location.href = '" + redirectUrl + "?imp_success=true&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid;\n                                                        } else {\n                                                            location.href = '" + redirectUrl + "?imp_success=false&imp_uid='+rsp.imp_uid+'&merchant_uid='+rsp.merchant_uid;\n                                                        }\n                                                   }";
                                /** @type {?} */
                                var iamport_script = "IMP.certification(" + JSON.stringify(param) + ", " + inlineCallback + ")";
                                browser.executeScript({
                                    code: iamport_script
                                });
                            }
                        }), ( /**
                         * @param {?} e
                         * @return {?}
                         */function (e) {
                        }));
                        browser.on("exit")
                            .subscribe(( /**
                     * @param {?} e
                     * @return {?}
                     */function (e) {
                            reject("사용자가 본인인증을 취소하였습니다.");
                        }));
                        browser.show();
                    }));
                }));
                return promise;
            };
        IamportService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        IamportService.ctorParameters = function () {
            return [
                { type: i1.Platform },
                { type: ngx$1.InAppBrowser },
                { type: ngx.File }
            ];
        };
        /** @nocollapse */ IamportService.ngInjectableDef = i0.defineInjectable({ factory: function IamportService_Factory() { return new IamportService(i0.inject(i1.Platform), i0.inject(i2.InAppBrowser), i0.inject(i3.File)); }, token: IamportService, providedIn: "root" });
        return IamportService;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/iamport-ionic4-kcp.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var IamportIonic4KcpModule = /** @class */ (function () {
        function IamportIonic4KcpModule() {
        }
        IamportIonic4KcpModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [],
                        imports: [],
                        providers: [
                            ngx$1.InAppBrowser
                        ],
                        exports: []
                    },] }
        ];
        return IamportIonic4KcpModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: iamport-ionic4-kcp.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.IamportService = IamportService;
    exports.IamportIonic4KcpModule = IamportIonic4KcpModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=iamport-ionic4-kcp.umd.js.map